let chalk;_4f9‍.x([["auditCode",()=>auditCode],["fixCode",()=>fixCode]]);_4f9‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);/**
 * @file main.js, it includes the logic of the package
 *
 * @author Jose Gracia Berenguer
 * @since 1.0.0.
 */

/*import path from 'path';
import fs from 'fs';*/
const path = require('path'),
    fs = require('fs');
const readline = require('readline');



       async function auditCode(folderToImplode) {
    const htmlFiles = findFilesInDir(folderToImplode, '.html');
    const phpFiles = findFilesInDir(folderToImplode, '.php');


    const htmlPhpFiles = htmlFiles.concat(phpFiles);
    const cssFiles = findFilesInDir(folderToImplode, '.html');
    for (let i = 0; i < htmlPhpFiles.length; i++) {
        console.log('a');
        _4f9‍.g.console.log(getCssReferencedInHtml(htmlPhpFiles[i]));
    }
    // get the css:
}

       async function fixCode(folderToImplode) {

}









exports.auditCode = auditCode;
exports.fixCode = fixCode;
