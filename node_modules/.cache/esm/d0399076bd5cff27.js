let fs;_bd5‍.x([["default",()=>removeUnused]]);_bd5‍.w("fs",[["default",["fs"],function(v){fs=v}]]);

               function removeUnused(cssFiles, styles) {
    let fileReaded;
    cssFiles.forEach((file) => {
        fileReaded = fs.readFileSync(file, 'utf-8'); // reads the file
        // fileReaded = fileReaded.replace(/(?:^|}|\.|#)\s*watermelon\s*(\{|:|>|\s|\+|~)([^}]*)}/g, 'aaaaa');
        _bd5‍.g.console.log(fileReaded);
        styles.forEach((stylesPath) => {
            stylesPath.forEach((styleToRemove) => {
                const regex = new RegExp(`(?:^|}|\\.|\\#)\\s*${styleToRemove.css.substr(1)}\\s*(\\{|\\:|\\>|\\s|\\+|\\~)([^}]*)}`);
                fileReaded = fileReaded.replace(regex, '');
            });
        });
        // writes in file and removes blank lines
        fs.writeFileSync(file, fileReaded.replace(/^[ \t\n]*$/gm, ''));
    });


}
